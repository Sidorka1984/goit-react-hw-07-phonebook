{"version":3,"sources":["services/contactsApi.js","redux/operation.js","redux/slices/todo.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","redux/selectors.js","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","index.js"],"names":["axios","defaults","baseURL","fetchDeleteContact","id","delete","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","newContact","contact","post","deleteContact","contactsSlice","createSlice","initialState","items","filter","isLoding","error","reducers","changeFilter","state","action","payload","extraReducers","fulfilled","status","pending","rejected","actions","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Containers","styled","div","Title","h1","Container","title","children","TitleSecond","h2","Input","input","Button","button","getFilter","getIsLoading","IsLoading","getContacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","selectors","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","some","toast","operation","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","disabled","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","useEffect","map","onClick","console","log","onDeleteContact","App","window","localStorage","setItem","JSON","stringify","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c525eb9d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL='http://localhost:7777';\r\n\r\nexport const fetchContacts = () => {\r\n    return axios.get(\"/contacts\");\r\n};\r\n\r\nexport const fetchAddContact = (contact) => {\r\n    return axios.post(`/contacts`, contact);\r\n}\r\n\r\nexport const fetchDeleteContact = (id) => {\r\n    return axios.delete(`contacts/${id}`);\r\n}","import axios from \"axios\";\r\nimport {\r\n    fetchContacts,\r\n    fetchAddContact,\r\n    fetchDeleteContact\r\n} from \"../services/contactsApi.js\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:7777';\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n    \"contacts/fetchContact\",\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await fetchContacts();\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    \"contacts/addContact\",\r\n    async ({ name, number }, { rejectWithValue }) => {\r\n        try {\r\n            const newContact = { name, number };\r\n            const { data } = await fetchAddContact(newContact);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    \"contacts/deleteContact\",\r\n    async (id, { rejectWithValue }) => {\r\n        try {\r\n            await fetchDeleteContact(id);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    }\r\n);","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n    fetchContact,\r\n    addContact,\r\n    deleteContact\r\n} from \"../operation.js\";\r\n// import initialContacts from \"../../Data/contacts.json\";\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: {\r\n    items: [],\r\n    filter: \"\",\r\n    isLoding: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    changeFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContact.fulfilled]: (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = null;\r\n      state.error = null;\r\n    },\r\n    [fetchContact.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [fetchContact.rejected]: (state, action) => {\r\n      state.status = null;\r\n      state.error = \"Error\";\r\n    },\r\n    [addContact.fulfilled]: (state, action) => {\r\n      state.items = [action.payload, ...state.items];\r\n      state.status = null;\r\n      state.error = null;\r\n    },\r\n    [addContact.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n      state.error = null;\r\n    },\r\n    [addContact.rejected]: (state, action) => {\r\n      state.status = null;\r\n      state.error = \"Error\";\r\n    },\r\n    [deleteContact.fulfilled]: (state, action) => {\r\n      state.items = state.items.filter((contact) => contact.id !== action.payload);\r\n    },\r\n  }\r\n});\r\n\r\n// const filterSlice = createSlice({\r\n  // name: \"filter\",\r\n  // initialState: initialState.filter,\r\n  // reducers: {\r\n    // changeFilter: (_, { payload }) => payload,\r\n  // },\r\n// });\r\n\r\n// const rootReduser = combineReducers({\r\n  // contacts: contactsSlice.reducer,\r\n  // filter: filterSlice.reducer,\r\n// });\r\n\r\n// export const { addContact, deleteContact } = contactsSlice.actions;\r\nexport const { changeFilter } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../redux/slices/todo\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  \r\n  devTools: process.env.NODE_ENV === \"development\",\r\n });\r\n\r\n export default store;\r\n\r\n// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\n// import logger from \"redux-logger\";\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// import rootReduser from \"./slices/todo\";\r\n\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n// const middleware = [\r\n//   ...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n//   }),\r\n//   logger,\r\n// ];\r\n\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(persistConfig, rootReduser),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === \"development\",\r\n// });\r\n\r\n// export const persistor = persistStore(store);\r\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getIsLoading = (state) => state.contacts.IsLoading;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export const getVisibleContacts = (state) => {\r\n  // const contacts = getContacts(state);\r\n  // const filter = getFilter(state);\r\n  // const normalizedFilter = filter.toLowerCase();\r\n// \r\n  // return contacts.filter((contact) =>\r\n    // contact.name.toLowerCase().includes(normalizedFilter)\r\n  // );\r\n// };\r\n// ","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { addContact } from '../../redux/operation';\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { getContacts } from \"../../redux/selectors.js\";\r\n// import * as actions from '../../redux/actions.js';\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(selectors.getContacts);\r\n    const dispatch = useDispatch(); \r\n\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n      \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n      \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.some((contact) => contact.name === name || contact.number === number)) {\r\n            toast.error(`${name} or ${number} already in the contacts.`);\r\n            \r\n            reset();\r\n            return;\r\n        } else {\r\n            dispatch(operation.addContact({\r\n                id: uuidv4(),\r\n                name,\r\n                number,\r\n            }))\r\n            reset();\r\n        };\r\n\r\n        // if (contacts.some((contact) => contact.name === name)) {\r\n            // toast.error(`${name} already in the contacts.`);\r\n            // reset();\r\n            // return;\r\n        // }\r\n        //  if (contacts.some((contact) => contact.number === number)) {\r\n            //  toast.error(`${number} already in the contacts.`);\r\n            //  reset();\r\n            //  return;\r\n        // };\r\n\r\n        // dispatch(actions.addContact({ name, number }));\r\n\r\n        // reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n// Form.propTypes = {\r\n    // onSubmit: PropTypes.func.isRequired,\r\n// }","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","// import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from '../../redux/selectors';\r\n// import * as actions from '../../redux/actions.js';\r\nimport { changeFilter } from '../../redux/slices/todo';\r\nimport { selectors } from \"../../redux\";\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(selectors.getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\n display: flex;\r\n font-style: normal;\r\n font-weight: normal;\r\n width: 100%;\r\n margin: 0 auto;\r\n padding: 10px 5px;\r\n font-size: 16px;\r\n align-items:center;\r\n justify-content: left;\r\n & span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-weight: 600;\r\n    color: var(--color-dark);\r\n    &:first-of-type {\r\n      color: var(--color-accent);\r\n      margin-right: 10px;\r\n    }\r\n    & svg {\r\n      margin-right: 10px;\r\n      color: var(--color-accent);\r\n    }\r\n  }\r\n  & svg {\r\n    color: var(--color-title);\r\n  }\r\n\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\n display: block;\r\n  margin-left: auto;\r\n    padding: 10px;\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { fetchContact, deleteContact } from '../../redux/operation.js';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\n// import * as actions from \"../../redux/actions.js\";\r\n// import { getVisibleContacts } from \"../../redux/selectors.js\";\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n\r\nconst ContactsList = () => {\r\n    const contacts = useSelector(selectors.getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => {\r\n        dispatch(operation.deleteContact(id));\r\n        console.log(id);\r\n    }\r\n    useEffect(() => {\r\n        dispatch(operation.fetchContact())\r\n    }, [dispatch])\r\n   \r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}>\r\n                    <span>\r\n                        <AiOutlineUser />\r\n                        {name}:\r\n                    </span>\r\n                    \r\n                    \r\n                    <span>{number}</span>\r\n                    <BtnDelete onClick={() => onDeleteContact(id)}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactsList;","// import { useState, useEffect, useRef } from \"react\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport Container from \"./Container\";\r\nimport Form from \"./Form\";\r\nimport Filter from \"./Filter/Filter.jsx\";\r\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\r\nimport { GrContactInfo } from \"react-icons/gr\";\r\n// import ContactsJson from \"../Data/contacts.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getContacts } from \"../redux/selectors\";\r\n\r\nexport default function App() {\r\n  const contacts = useSelector(getContacts);\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <Container title=\"Phonebook\">\r\n      <Toaster autoClose={4000} position=\"top-right\" />\r\n      <Form />\r\n      <h2>\r\n        <GrContactInfo /> Contacts\r\n      </h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n// import * as store from \"./redux/store\";\r\nimport store from \"./redux/store\";\r\n\r\nimport App from \"./component/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n        <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}